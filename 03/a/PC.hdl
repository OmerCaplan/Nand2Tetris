// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16], load, inc, reset;
    OUT out[16];

    PARTS:
    // creating new register:
    Register (in = pcOut, load = true, out = reg, out = out);      // load = true so every clock-cycle this will update itself

    // setting selectors for later:
    Not (in = reset, out = noReset);
    Not (in = load, out = noLoad);
    And (a = noReset, b = load, out = loadMode);
    And (a = noReset, b = noLoad, out = maybeInc);
    And (a = maybeInc, b = inc, out = incMode);

    // building the PC:
    Mux16 (a = reg, b = false, sel = reset, out = t1);  // if reset = 1
    Mux16 (a = t1, b = in, sel = loadMode, out = t2);   // if reset = 0 && load = 1
    Inc16 (in = t2, out = inct2);
    Mux16 (a = t2, b = inct2, sel = incMode, out = pcOut);

}
